#!/usr/bin/env python3
#-*- coding: utf-8 -*-

"""
Задание 7.4
Создать функцию, которая обрабатывает конфигурационный файл коммутатора и возвращает словарь:
	• Все команды верхнего уровня (глобального режима конфигурации), будут ключами.
	• Если у команды верхнего уровня есть подкоманды, они должны быть в значении у соответствующего ключа, 
        в виде списка (пробелы вначале можно оставлять).
	• Если у команды верхнего уровня нет подкоманд, то значение будет пустым списком

Функция ожидает в качестве аргумента имя конфигурационного файла.
Проверить работу функции на примере файла config_sw1.txt

При обработке конфигурационного файла, надо игнорировать строки, которые начинаются с '!', а также строки в которых содержатся слова из списка ignore.
Для проверки надо ли игнорировать строку, использовать функцию ignore_command.
"""

ignore = ['duplex', 'alias', 'Current configuration']

def ignore_command(command, ignore):
    """
    Функция проверяет содержится ли в команде слово из списка ignore.
    command - строка. Команда, которую надо проверить
    ignore - список. Список слов

    Возвращает True, если в команде содержится слово из списка ignore, False - если нет
    """
    ignore_command = False

    for word in ignore:
        if word in command:
            return True
    return ignore_command

def config_to_dict(config):
    """
    config - имя конфигурационного файла коммутатора
    Возвращает словарь:
    - Все команды верхнего уровня (глобального режима конфигурации), будут ключами.
    - Если у команды верхнего уровня есть подкоманды,
      они должны быть в значении у соответствующего ключа, в виде списка (пробелы вначале можно оставлять).
    - Если у команды верхнего уровня нет подкоманд, то значение будет пустым списком
    """

    config_dict = {}

    with open(config) as f:
        for line in f:
            line = line.rstrip()
            if line.startswith('!') or ignore_command(line, ignore):
                pass
            elif not line.startswith(' '):
                group = line
                config_dict[line] = []
            elif line.startswith(' '):
                config_dict[group].append(line)

    return config_dict

print(config_to_dict('config_sw1.txt'))
